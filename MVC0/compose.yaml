services:
  franken:
    image: ${IMAGES_PREFIX:-}app-php
    restart: unless-stopped
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost}, php:80
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: mysql://root:1234@db:3306/opost?serverVersion=11.2.2-MariaDB-1:11.2.2+maria~ubu2204
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://php/.well-known/mercure}
      MERCURE_PUBLIC_URL: ${CADDY_MERCURE_PUBLIC_URL:-https://${SERVER_NAME:-localhost}/.well-known/mercure}
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      # The two next lines can be removed after initial installation
      SYMFONY_VERSION: ${SYMFONY_VERSION:-5.4.*}
      STABILITY: ${STABILITY:-stable}
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      dbWeb:
        condition: service_healthy
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-9002}
        protocol: tcp
      # HTTPS
      - target: 443
        published: ${HTTPS_PORT:-4444}
        protocol: tcp
      # HTTP/3
      - target: 443
        published: ${HTTP3_PORT:-4444}
        protocol: udp

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
  dbWeb:
    image: mariadb
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=1234
      - MARIADB_DATABASE=devweb
    volumes:
      - opost:/var/lib/mysql
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      interval: 15s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin
    ports: 
      - 9003:80
    environment:
      - PMA_HOST=dbWeb

###> doctrine/doctrine-bundle ###
  #database:
    #image: postgres:${POSTGRES_VERSION:-16}-alpine
    #environment:
      #POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      #POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      #POSTGRES_USER: ${POSTGRES_USER:-app}
    #volumes:
     # - database_data:/var/lib/mysql:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  caddy_data:
  caddy_config:
  opost:
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  #database_data:
###< doctrine/doctrine-bundle ###
